{
  "description": "CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition",
  "type": "object",
  "properties": {
    "acceptedNames": {
      "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
      "type": "object",
      "required": [
        "plural",
        "kind"
      ],
      "properties": {
        "categories": {
          "description": "categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
          "type": "string"
        },
        "listKind": {
          "description": "listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".",
          "type": "string"
        },
        "plural": {
          "description": "plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
          "type": "string"
        },
        "shortNames": {
          "description": "shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "singular": {
          "description": "singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.",
          "type": "string"
        }
      }
    },
    "conditions": {
      "description": "conditions indicate state for particular aspects of a CustomResourceDefinition",
      "type": "array",
      "items": {
        "description": "CustomResourceDefinitionCondition contains details for the current condition of this pod.",
        "type": "object",
        "required": [
          "type",
          "status"
        ],
        "properties": {
          "lastTransitionTime": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "description": "message is a human-readable message indicating details about last transition.",
            "type": "string"
          },
          "reason": {
            "description": "reason is a unique, one-word, CamelCase reason for the condition's last transition.",
            "type": "string"
          },
          "status": {
            "description": "status is the status of the condition. Can be True, False, Unknown.",
            "type": "string"
          },
          "type": {
            "description": "type is the type of the condition. Types include Established, NamesAccepted and Terminating.",
            "type": "string"
          }
        }
      },
      "x-kubernetes-list-map-keys": [
        "type"
      ],
      "x-kubernetes-list-type": "map"
    },
    "storedVersions": {
      "description": "storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.",
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}